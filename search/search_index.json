{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cyber Fidget Documentation","text":"<p>Welcome! This site covers setup, hardware, and app development for Cyber Fidget.</p>"},{"location":"#quick-links","title":"Quick links","text":"<ul> <li>Buy / Pre-order: https://cyberfidget.com/buy.html</li> <li>Main site: https://cyberfidget.com</li> <li>Contact: https://cyberfidget.com/contact.php</li> </ul>"},{"location":"#what-is-cyber-fidget","title":"What is Cyber Fidget?","text":"<p>A pocket-sized, programmable gadget you can fidget with, learn on, and extend. Wi-Fi/BLE, OLED, LEDs, speaker, mic, slider, buttons, micro-SD \u2014 built on ESP32.</p> <p>Keep it simple</p> <p>Use the \u201cGetting started\u201d pages to flash your first app in minutes. Acronyms are expanded on first use.</p>"},{"location":"contribute/","title":"Contribute","text":"<p>We welcome PRs for: - Docs (typos, examples, screenshots) - New apps / demos - HAL improvements</p>"},{"location":"contribute/#guidelines","title":"Guidelines","text":"<ul> <li>Keep the home page acronym-light; expand on first use.</li> <li>Use short sections, code blocks, and screenshots.</li> <li>Add a brief \"Tested on hardware rev X\" note.</li> </ul>"},{"location":"getting-started/first-flash-arduino/","title":"First flash (Arduino)","text":"<ol> <li>Install Arduino IDE and ESP32 board support.</li> <li>Select the correct port.</li> <li>Paste this minimal sketch and upload:</li> </ol> <p>```cpp</p>"},{"location":"getting-started/first-flash-arduino/#include","title":"include  <p>void setup() {   // TODO: init OLED + LEDs according to the Cyber Fidget HAL   pinMode(LED_BUILTIN, OUTPUT); } void loop() {   digitalWrite(LED_BUILTIN, HIGH);   delay(200);   digitalWrite(LED_BUILTIN, LOW);   delay(200); }</p>","text":""},{"location":"getting-started/overview/","title":"Overview","text":"<p>This guide helps you: 1. Power and connect your device 2. Flash a simple app (Arduino or CircuitPython) 3. Explore examples and the app gallery</p> <p>You\u2019ll need: USB-C cable, computer with USB, internet.</p>"},{"location":"hardware/pinout/","title":"Pinout (placeholder)","text":"<p>We\u2019ll publish the exact rev pin map here along with a diagram.</p>"},{"location":"hardware/specs/","title":"Specs","text":""},{"location":"hardware/specs/#docshardwarespecsmd","title":"<code>docs/hardware/specs.md</code>","text":"<p>```markdown</p>"},{"location":"hardware/specs/#hardware-specs-draft","title":"Hardware specs (draft)","text":"<ul> <li>MCU: ESP32 (Wi-Fi + Bluetooth)</li> <li>Display: 0.96\" OLED (mono)</li> <li>Controls: 6 buttons + slider potentiometer</li> <li>Audio: speaker + microphone</li> <li>LEDs: RGBW</li> <li>Storage: micro-SD</li> <li>I/O: USB-C</li> <li>Enclosure: machined aluminum</li> </ul>"},{"location":"software/apps/","title":"Apps","text":"<p>Examples include Matrix Rain, Starfield, Breakout, and utilities. Each app should document: - Controls - Files on SD (if any) - Known limitations</p>"},{"location":"software/ota-builder/","title":"OTA / Builder (preview)","text":"<p>The Build page lets you sign in, describe an app, and flash it over-the-air. This section will cover: - Auth flow - Prompt format - Build status &amp; logs - Safety/permissions (what the builder can access on device)</p>"},{"location":"software/storage/","title":"Storage &amp; SD","text":"<ul> <li>Recommended card formats</li> <li>Folder layout for assets (images, sounds)</li> <li>Save file conventions</li> </ul>"}]}